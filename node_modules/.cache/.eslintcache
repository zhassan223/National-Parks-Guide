[{"/Users/ziyadhassan/Documents/GitHub/national-park-website/src/index.js":"1","/Users/ziyadhassan/Documents/GitHub/national-park-website/src/reportWebVitals.js":"2","/Users/ziyadhassan/Documents/GitHub/national-park-website/src/App.js":"3","/Users/ziyadhassan/Documents/GitHub/national-park-website/src/components/Header.js":"4","/Users/ziyadhassan/Documents/GitHub/national-park-website/src/components/Activities.js":"5","/Users/ziyadhassan/Documents/GitHub/national-park-website/src/components/Park.js":"6","/Users/ziyadhassan/Documents/GitHub/national-park-website/src/components/Parks.js":"7","/Users/ziyadhassan/Documents/GitHub/national-park-website/src/components/Webcam.js":"8","/Users/ziyadhassan/Documents/GitHub/national-park-website/src/components/Header2.js":"9","/Users/ziyadhassan/Documents/GitHub/national-park-website/src/components/Header3.js":"10"},{"size":500,"mtime":1636924537147,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1636924537147,"results":"13","hashOfConfig":"12"},{"size":694,"mtime":1636924909919,"results":"14","hashOfConfig":"12"},{"size":261,"mtime":1635971978099,"results":"15","hashOfConfig":"12"},{"size":1471,"mtime":1636810507779,"results":"16","hashOfConfig":"12"},{"size":5503,"mtime":1636914643618,"results":"17","hashOfConfig":"12"},{"size":1738,"mtime":1636915058286,"results":"18","hashOfConfig":"12"},{"size":1534,"mtime":1636916573977,"results":"19","hashOfConfig":"12"},{"size":261,"mtime":1636776802678,"results":"20","hashOfConfig":"12"},{"size":208,"mtime":1636776866848,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"151pgsy",{"filePath":"25","messages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ziyadhassan/Documents/GitHub/national-park-website/src/index.js",[],["48","49"],"/Users/ziyadhassan/Documents/GitHub/national-park-website/src/reportWebVitals.js",[],"/Users/ziyadhassan/Documents/GitHub/national-park-website/src/App.js",["50"],"import Header from \"./components/Header\"\nimport Activities from \"./components/Activities\";\nimport Parks from \"./components/Parks\";\nimport Park from \"./components/Park\";\nimport Webcam from \"./components/Webcam\";\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <>\n      <Router>\n\n        <Routes>\n          <Route exact path=\"/\" element={<Activities />} />\n          <Route exact path='/parks/:activity' element={<Parks />} />\n          <Route exact path='/park/:fname' element={<Park />} />\n          <Route exact path='/park/webcam/:fname' element={<Webcam />} />\n        </Routes>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","/Users/ziyadhassan/Documents/GitHub/national-park-website/src/components/Header.js",[],"/Users/ziyadhassan/Documents/GitHub/national-park-website/src/components/Activities.js",["51"],"import React from \"react\";\nimport \"./Activities.css\";\nimport Header from \"./Header\"\nimport { Link, useHistory } from 'react-router-dom';\n\n// const handleOnSubmit = (props) => {\n//     this.props.history.push('/parks/:activity');\n// };\n\nclass Activities extends React.Component {\n    state = {\n        loading: true,\n        person: null\n    };\n\n\n    async componentDidMount() {\n        const url = \"https://developer.nps.gov/api/v1/activities?limit=50&api_key=mWVRZYNNsVJXtdRrlIOnA6v4nFogwFI0MKHa9WaV\";\n        const response = await fetch(url);\n        const data = await response.json();\n        /* console.log(data.data[0].name) */\n        this.setState({ activity: data.data, loading: false });\n\n\n\n    }\n\n\n\n    render() {\n        if (this.state.loading) {\n            return <div>loading...</div>;\n        }\n\n        if (!this.state.activity) {\n            return <div>activity</div>;\n        }\n\n        return (\n            <div>\n                <Header />\n                {this.state.activity.map((activity, idx) => (\n                    < Link className=\"Link\" to={`/parks/${activity.name}`}>\n                        <ActivityButton key={idx} name={activity.name}></ActivityButton>\n                    </Link>\n                )\n                )}\n            </div>\n        );\n    }\n}\n\n\n\nfunction ActivityButton(props) {\n\n    return (<div className=\"act_names\">\n\n\n        <button className=\"button\">{props.name}</button>\n\n    </div >);\n}\nexport default Activities;","/Users/ziyadhassan/Documents/GitHub/national-park-website/src/components/Park.js",["52","53","54","55","56","57","58"],"import Activities from \"./Activities\";\nimport { Routes, Route, useParams } from 'react-router-dom';\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useHistory } from 'react-router-dom';\n\nimport \"./Park.css\";\nimport Header3 from \"./Header3\";\n\nconst useFetch = url => {\n    const [data, setData] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    // Similar to componentDidMount and componentDidUpdate:\n    useEffect(async () => {\n        const response = await fetch(url);\n        const data = await response.json();\n        const item = data.data\n        setData(item);\n        setLoading(false);\n    }, []);\n\n    return { data, loading };\n};\n\n\nfunction Parks(props) {\n\n\n\n    let params = useParams()\n    const url = \"https://developer.nps.gov/api/v1/parks?limit=1&q=\" + params.fname + \"&sort=&api_key=mWVRZYNNsVJXtdRrlIOnA6v4nFogwFI0MKHa9WaV\";\n    // const response = await fetch(url);\n    // const data = await response.json();\n    /* console.log(data.data[0].name) */\n    // this.setState({ parks: data.data.parks });\n\n\n\n    const { data, loading } = useFetch(url);\n\n\n\n\n\n    /* data is an array of json objects  */\n\n    console.log(data)\n    if (loading) {\n        return <div>loading...</div>;\n    }\n\n    if (!data) {\n        return <div>you don't have data man\n        </div>;\n    }\n\n    return (\n\n        <div>\n            <Header3 />\n            <h1>Welcome to {data[0].fullName}!!!</h1>\n            <h3> Park description:</h3>\n            <p>{data[0].description}</p>\n            <h3> Topics related to this park include:</h3>\n            <ol>{data[0].topics.map((topic, idx) => (\n\n                <li>{topic.name}</li>\n            )\n            )}</ol>\n            <h3> Activities that are associated with this Park: </h3>\n            <ol>{data[0].activities.map((act, idx) => (\n                <li> {act.name} </li>\n            ))} </ol>\n            <h3>Contacts:</h3>\n            <h4> Email(s):</h4>\n            <ol>\n                {data[0].contacts.emailAddresses.map((address, idx) => (\n                    <li>\n                        {address.emailAddress}\n                    </li>\n                ))}\n            </ol>\n            <h4>\n                Phone Number(s):\n                <ol>\n                    {data[0].contacts.phoneNumbers.map((number, idx) => (\n                        <li>\n                            Phone Number : {number.phoneNumber} , extension : {number.extension}, type: {number.type}\n                        </li>\n                    ))}\n                </ol>\n            </h4>\n            <h3> Designation: {data[0].designation}</h3>\n            <h3> Directions Info: </h3>\n            <p>{data[0].directionsInfo}</p>\n            <p> For more directions info visit <a href={data[0].directionsUrl}>{data[0].directionsUrl}</a></p>\n            <h3> Operating Hours </h3>\n            <p> Description of hours: {data[0].operatingHours[0].description} </p>\n\n            <ul>\n                <p>Standard Hours:</p>\n                {data[0].operatingHours.map((hour, idx) => (\n                    <li>\n                        Wednesday: {hour.standardHours.wednesday}, Monday: {hour.standardHours.monday}, Thursday:{hour.standardHours.thursday}, Sunday: {hour.standardHours.sunday}, Tuesday: {hour.standardHours.tuesday}, Friday: {hour.standardHours.friday}, Saturday: {hour.standardHours.saturday}\n                    </li>\n                ))}\n            </ul>\n\n            <h4> Exceptions to Hours: </h4>\n            <ul>\n                {data[0].operatingHours[0].exceptions.map((hours, idx) => (\n                    <li>\n                        <p>\n                            Start Date: {hours.startDate}\n                        </p>\n                        <p>\n                            End Date: {hours.endDate}\n                        </p>\n                        <p>\n                            Exception Hours: Friday: {hours.exceptionHours.friday}, Monday:{hours.exceptionHours.monday}, Saturday:{hours.exceptionHours.saturday}, Sunday:{hours.exceptionHours.sunday}, Thursday:{hours.exceptionHours.thursday}, Tuesday:{hours.exceptionHours.tuesday}, Wednesday: {hours.exceptionHours.wednesday}\n                        </p>\n                        <p>\n                            Why?: {hours.name}\n                        </p>\n\n\n                    </li>\n                ))}\n            </ul>\n            <h3>Entrance Fee(s): </h3>\n            <ul> {data[0].entranceFees.map((fee, idx) => (\n                <li> Cost: {fee.cost} ; Description of Fee: {fee.description}</li>\n            ))\n            } </ul>\n            <h3> Entrance Pass(es):</h3>\n            <ul>\n\n                {data[0].entrancePasses.map((pass, idx) => (\n                    <li> Name:{pass.title}\n                        Cost: {pass.cost};\n                        Description: {pass.description}\n\n                    </li>\n                ))}\n            </ul>\n            <h3>Check Out These Images from the park!</h3>\n            <div className=\"images\">\n                {data[0].images.map((img, idx) => (\n                    <img className=\"image\" src={img.url} />\n\n                )\n                )}\n            </div>\n            <Link to={`/park/webcam/${data[0].fullName}`}>\n                <h3>For Webcams pictures from this Park Click Me! </h3>\n            </Link>\n            <h3> For More info about this park visit </h3>\n            <a href={data[0].url}>{data[0].url}</a>\n        </div>\n    )\n\n}\n\nexport default Parks;\n","/Users/ziyadhassan/Documents/GitHub/national-park-website/src/components/Parks.js",["59","60","61","62","63","64"],"\nimport Activities from \"./Activities\";\nimport { Routes, Route, useParams } from 'react-router-dom';\nimport { Link, useHistory } from 'react-router-dom'\n\nimport React, { useEffect, useState } from \"react\";\nimport \"./Parks.css\";\nimport Header2 from \"./Header2\";\n\nconst useFetch = url => {\n    const [data, setData] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    // Similar to componentDidMount and componentDidUpdate:\n    useEffect(async () => {\n        const response = await fetch(url);\n        const data = await response.json();\n        const item = data.data[0]['parks']\n        setData(item);\n        setLoading(false);\n    }, []);\n\n    return { data, loading };\n};\n\nfunction Parks(props) {\n\n\n\n    let params = useParams()\n    const url = \"https://developer.nps.gov/api/v1/activities/parks?q=\" + params.activity + \"&limit=1&api_key=mWVRZYNNsVJXtdRrlIOnA6v4nFogwFI0MKHa9WaV\";\n    // const response = await fetch(url);\n    // const data = await response.json();\n    /* console.log(data.data[0].name) */\n    // this.setState({ parks: data.data.parks });\n\n\n\n\n    const { data, loading } = useFetch(url);\n\n\n\n\n    /* data is an array of json objects  */\n    console.log(data)\n    if (loading) {\n        return <div>loading...</div>;\n    }\n\n    if (!data) {\n        return <div>you don't have data man\n        </div>;\n    }\n\n    return (\n\n        <div>\n            <Header2 />\n            {data.map((park, idx) => (\n                < Link to={`/park/${park.fullName}`}>\n                    <button className=\"parkbutton\"><h2>{park.fullName}</h2>\n                        <h4>State(s): {park.states}</h4></button>\n                </Link>\n            )\n            )}\n\n        </div>\n    )\n\n}\n\nexport default Parks;\n\n","/Users/ziyadhassan/Documents/GitHub/national-park-website/src/components/Webcam.js",["65","66","67","68","69","70","71","72","73","74"],"import Activities from \"./Activities\";\nimport { Routes, Route, useParams } from 'react-router-dom';\nimport React, { useEffect, useState } from \"react\";\nimport { Link, useHistory } from 'react-router-dom';\n\nimport Header3 from \"./Header3\";\nconst useFetch = url => {\n    const [data, setData] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    // Similar to componentDidMount and componentDidUpdate:\n    useEffect(async () => {\n        const response = await fetch(url);\n        const data = await response.json();\n        const item = data.data\n        setData(item);\n        setLoading(false);\n    }, []);\n\n    return { data, loading };\n};\n\n\nfunction Webcam(props) {\n\n\n\n    let params = useParams()\n    const url = \"https://developer.nps.gov/api/v1/webcams?limit=50&q=\" + params.fname + \"&api_key=mWVRZYNNsVJXtdRrlIOnA6v4nFogwFI0MKHa9WaV\";\n\n\n\n\n    const { data, loading } = useFetch(url);\n\n\n\n\n\n    /* data is an array of json objects  */\n\n    console.log(data)\n    /* data is an array of json objects  */\n\n    if (loading) {\n        return <div>loading...</div>;\n    }\n\n    if (!data) {\n        return <div>you don't have data man\n        </div>;\n    }\n    const count = 0;\n    return (\n\n        <div>\n\n            {data.map((cam, idx) => (\n                <>\n                    {console.log(cam.images)}\n                    {cam.images.map((img, idx) => (\n                        <img src={img.url} />\n                    ))}\n                </>\n            ))}\n\n        </div>\n    )\n\n}\n\nexport default Webcam;","/Users/ziyadhassan/Documents/GitHub/national-park-website/src/components/Header2.js",[],"/Users/ziyadhassan/Documents/GitHub/national-park-website/src/components/Header3.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":1,"column":8,"nodeType":"81","messageId":"82","endLine":1,"endColumn":14},{"ruleId":"79","severity":1,"message":"83","line":4,"column":16,"nodeType":"81","messageId":"82","endLine":4,"endColumn":26},{"ruleId":"79","severity":1,"message":"84","line":1,"column":8,"nodeType":"81","messageId":"82","endLine":1,"endColumn":18},{"ruleId":"79","severity":1,"message":"85","line":2,"column":10,"nodeType":"81","messageId":"82","endLine":2,"endColumn":16},{"ruleId":"79","severity":1,"message":"86","line":2,"column":18,"nodeType":"81","messageId":"82","endLine":2,"endColumn":23},{"ruleId":"79","severity":1,"message":"83","line":4,"column":16,"nodeType":"81","messageId":"82","endLine":4,"endColumn":26},{"ruleId":"87","severity":1,"message":"88","line":14,"column":15,"nodeType":"89","endLine":20,"endColumn":6},{"ruleId":"87","severity":1,"message":"90","line":20,"column":8,"nodeType":"91","endLine":20,"endColumn":10,"suggestions":"92"},{"ruleId":"93","severity":1,"message":"94","line":149,"column":21,"nodeType":"95","endLine":149,"endColumn":60},{"ruleId":"79","severity":1,"message":"84","line":2,"column":8,"nodeType":"81","messageId":"82","endLine":2,"endColumn":18},{"ruleId":"79","severity":1,"message":"85","line":3,"column":10,"nodeType":"81","messageId":"82","endLine":3,"endColumn":16},{"ruleId":"79","severity":1,"message":"86","line":3,"column":18,"nodeType":"81","messageId":"82","endLine":3,"endColumn":23},{"ruleId":"79","severity":1,"message":"83","line":4,"column":16,"nodeType":"81","messageId":"82","endLine":4,"endColumn":26},{"ruleId":"87","severity":1,"message":"88","line":15,"column":15,"nodeType":"89","endLine":21,"endColumn":6},{"ruleId":"87","severity":1,"message":"90","line":21,"column":8,"nodeType":"91","endLine":21,"endColumn":10,"suggestions":"96"},{"ruleId":"79","severity":1,"message":"84","line":1,"column":8,"nodeType":"81","messageId":"82","endLine":1,"endColumn":18},{"ruleId":"79","severity":1,"message":"85","line":2,"column":10,"nodeType":"81","messageId":"82","endLine":2,"endColumn":16},{"ruleId":"79","severity":1,"message":"86","line":2,"column":18,"nodeType":"81","messageId":"82","endLine":2,"endColumn":23},{"ruleId":"79","severity":1,"message":"97","line":4,"column":10,"nodeType":"81","messageId":"82","endLine":4,"endColumn":14},{"ruleId":"79","severity":1,"message":"83","line":4,"column":16,"nodeType":"81","messageId":"82","endLine":4,"endColumn":26},{"ruleId":"79","severity":1,"message":"98","line":6,"column":8,"nodeType":"81","messageId":"82","endLine":6,"endColumn":15},{"ruleId":"87","severity":1,"message":"88","line":12,"column":15,"nodeType":"89","endLine":18,"endColumn":6},{"ruleId":"87","severity":1,"message":"90","line":18,"column":8,"nodeType":"91","endLine":18,"endColumn":10,"suggestions":"99"},{"ruleId":"79","severity":1,"message":"100","line":53,"column":11,"nodeType":"81","messageId":"82","endLine":53,"endColumn":16},{"ruleId":"93","severity":1,"message":"94","line":62,"column":25,"nodeType":"95","endLine":62,"endColumn":46},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"no-unused-vars","'Header' is defined but never used.","Identifier","unusedVar","'useHistory' is defined but never used.","'Activities' is defined but never used.","'Routes' is defined but never used.","'Route' is defined but never used.","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'url'. Either include it or remove the dependency array.","ArrayExpression",["103"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement",["104"],"'Link' is defined but never used.","'Header3' is defined but never used.",["105"],"'count' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"106","fix":"107"},{"desc":"106","fix":"108"},{"desc":"106","fix":"109"},"Update the dependencies array to be: [url]",{"range":"110","text":"111"},{"range":"112","text":"111"},{"range":"113","text":"111"},[645,647],"[url]",[658,660],[623,625]]